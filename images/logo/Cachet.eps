%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.1 (Build 14B25) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1580 296
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1580 296
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
12 w
0.60000002 i
/Cs1 SC
0.49415046 0.8262341 0.12987727 sc
q
0 296 m
1580 296 l
1580 0 l
0 0 l
h
0 296 m
W*
0 0 1580 296 rc
1 0 0 -1 8 286 cm
203.65625 22.507536 m
207.90837 18.255421 l
187.59758 6.6391473 164.07411 0 139 0 c
62.232418 0 0 62.232418 0 139 c
0 215.76758 62.232418 278 139 278 c
215.76758 278 278 215.76758 278 139 c
278 121.94987 274.93015 105.61674 269.31305 90.523178 c
269.31305 90.523178 l
264.78726 95.04895 l
269.59488 108.80936 272.20834 123.59947 272.20834 139 c
272.20834 212.56892 212.56892 272.20834 139 272.20834 c
65.431068 272.20834 5.7916665 212.56892 5.7916665 139 c
5.7916665 65.431068 65.431068 5.7916665 139 5.7916665 c
162.4632 5.7916665 184.50955 11.857897 203.65625 22.507536 c
203.65625 22.507536 l
h
203.65625 22.507536 m
S
Q
0.49415046 0.8262341 0.12987727 sc
q
0 296 m
1580 296 l
1580 0 l
0 0 l
h
0 296 m
W*
113.69791 112.91195 m
114.52826 113.74229 l
279.17654 278.39056 l
285.5405 284.75455 l
298.26843 272.02661 l
291.90445 265.66266 l
127.25618 101.01437 l
126.42583 100.18403 l
113.69791 87.456108 l
107.33395 93.820068 l
61.391907 139.76212 l
55.027943 146.12608 l
67.755867 158.854 l
74.119827 152.49004 l
113.69791 112.91195 l
113.69791 112.91195 l
h
113.69791 112.91195 m
W*
0 0 1580 296 rc
50.027943 289.75455 m
303.26843 289.75455 l
303.26843 82.456108 l
50.027943 82.456108 l
h
f
Q
0.36862746 0.36862746 0.36862746 sc
q
0 296 m
1580 296 l
1580 0 l
0 0 l
h
0 296 m
W*
350.75 149.25 m
350.75 159.91672 352.66666 170.54161 356.5 181.125 c
360.33334 191.70839 365.91663 201.16663 373.25 209.5 c
380.58337 217.83337 389.54163 224.58331 400.125 229.75 c
410.70837 234.91669 422.74994 237.5 436.25 237.5 c
452.0834 237.5 465.83328 233.9167 477.5 226.75 c
489.16672 219.5833 497.83331 210.25006 503.5 198.75 c
472 176.75 l
470.16666 181.41669 467.83334 185.29166 465 188.375 c
462.16666 191.45834 459.08334 193.95833 455.75 195.875 c
452.41666 197.79167 448.95834 199.125 445.375 199.875 c
441.79166 200.625 438.41669 201 435.25 201 c
427.91663 201 421.58337 199.41669 416.25 196.25 c
410.91663 193.08331 406.50003 189.00003 403 184 c
399.49997 178.99997 396.875 173.33336 395.125 167 c
393.375 160.66664 392.5 154.25003 392.5 147.75 c
392.5 140.74997 393.54166 134.00003 395.625 127.5 c
397.70834 120.99997 400.62497 115.25002 404.375 110.25 c
408.12503 105.24998 412.66663 101.29168 418 98.375 c
423.33337 95.458321 429.24997 94 435.75 94 c
439.08334 94 442.54166 94.458328 446.125 95.375 c
449.70834 96.291672 453.16666 97.708321 456.5 99.625 c
459.83334 101.54168 462.83331 104.04165 465.5 107.125 c
468.16669 110.20835 470.33331 113.99998 472 118.5 c
505.75 98.75 l
503.08331 92.249969 499.20834 86.416695 494.125 81.25 c
489.04166 76.083305 483.25003 71.750015 476.75 68.25 c
470.24997 64.749985 463.37503 62.083344 456.125 60.25 c
448.87497 58.416656 441.75003 57.5 434.75 57.5 c
422.4166 57.5 411.12506 60.124973 400.875 65.375 c
390.62494 70.625023 381.79172 77.58329 374.375 86.25 c
366.95828 94.91671 361.16669 104.74995 357 115.75 c
352.83331 126.75005 350.75 137.91661 350.75 149.25 c
350.75 149.25 l
h
560.75 56.5 m
554.24994 56.5 548.20837 57.541656 542.625 59.625 c
537.04163 61.708344 532.25 64.624985 528.25 68.375 c
524.25 72.125015 521.08337 76.541641 518.75 81.625 c
516.41663 86.708359 515.25 92.249969 515.25 98.25 c
515.25 104.75003 516.625 110.66664 519.375 116 c
522.125 121.33336 526 125.91665 531 129.75 c
536 133.58336 541.91663 136.58333 548.75 138.75 c
555.58337 140.91667 563.16663 142 571.5 142 c
577 142 582.33331 141.54167 587.5 140.625 c
592.66669 139.70833 597.16663 138.33334 601 136.5 c
601 142.5 l
601 157.66675 592.25006 165.25 574.75 165.25 c
567.58331 165.25 560.75006 164.04167 554.25 161.625 c
547.74994 159.20833 540.91669 155.58336 533.75 150.75 c
522 175.75 l
530.66669 181.4167 539.66663 185.66666 549 188.5 c
558.33337 191.33334 568.24994 192.75 578.75 192.75 c
598.58344 192.75 613.91663 188.08337 624.75 178.75 c
635.58337 169.41663 641 155.75009 641 137.75 c
641 104 l
641 99.999977 641.75 97.208344 643.25 95.625 c
644.75 94.041656 647.41663 93.083336 651.25 92.75 c
651.25 59 l
647.41663 58.166664 643.875 57.625 640.625 57.375 c
637.375 57.125 634.5 57 632 57 c
624.66663 57.166668 619.08337 58.666653 615.25 61.5 c
611.41663 64.333351 609 68.416641 608 73.75 c
607.25 79.75 l
601.41663 72.249962 594.45837 66.500023 586.375 62.5 c
578.29163 58.499981 569.75006 56.5 560.75 56.5 c
560.75 56.5 l
h
572.5 85.25 m
576.83337 85.25 581.04163 85.999992 585.125 87.5 c
589.20837 89.000008 592.58331 90.999985 595.25 93.5 c
599.08337 96.500015 601 99.666649 601 103 c
601 115.5 l
597.5 116.83334 593.70837 117.875 589.625 118.625 c
585.54163 119.375 581.75 119.75 578.25 119.75 c
570.91663 119.75 564.875 118.08335 560.125 114.75 c
555.375 111.41665 553 107.08336 553 101.75 c
553 96.916641 554.83331 92.958351 558.5 89.875 c
562.16669 86.791649 566.83331 85.25 572.5 85.25 c
572.5 85.25 l
h
663.25 124.75 m
663.25 133.75005 664.83331 142.37495 668 150.625 c
671.16669 158.87505 675.75 166.12497 681.75 172.375 c
687.75 178.62503 695.12494 183.58331 703.875 187.25 c
712.62506 190.91669 722.58325 192.75 733.75 192.75 c
748.91675 192.75 761.66663 189.5417 772 183.125 c
782.33337 176.7083 790.08331 168.33339 795.25 158 c
756.25 146.25 l
751.08331 154.58337 743.50006 158.75 733.5 158.75 c
725.16663 158.75 718.20837 155.6667 712.625 149.5 c
707.04163 143.3333 704.25 135.08339 704.25 124.75 c
704.25 119.58331 705 114.87502 706.5 110.625 c
708 106.37498 710.08331 102.75002 712.75 99.75 c
715.41669 96.749985 718.54163 94.416672 722.125 92.75 c
725.70837 91.083328 729.5 90.25 733.5 90.25 c
738.5 90.25 743.08331 91.458321 747.25 93.875 c
751.41669 96.291679 754.5 99.416649 756.5 103.25 c
795.5 91.25 l
790.66663 81.083282 782.95837 72.750031 772.375 66.25 c
761.79163 59.749966 748.91675 56.5 733.75 56.5 c
722.74994 56.5 712.87506 58.374981 704.125 62.125 c
695.37494 65.875015 687.95837 70.874969 681.875 77.125 c
675.79163 83.375031 671.16669 90.624962 668 98.875 c
664.83331 107.12504 663.25 115.74995 663.25 124.75 c
663.25 124.75 l
h
940 59 m
900 59 l
900 132.75 l
900 141.25005 898.29169 147.49998 894.875 151.5 c
891.45831 155.50002 886.83337 157.5 881 157.5 c
878.66663 157.5 876.125 156.95834 873.375 155.875 c
870.625 154.79166 867.95837 153.20834 865.375 151.125 c
862.79163 149.04166 860.41669 146.58334 858.25 143.75 c
856.08331 140.91666 854.41669 137.75002 853.25 134.25 c
853.25 59 l
813.25 59 l
813.25 241.5 l
853.25 241.5 l
853.25 168.25 l
858.08337 176.08337 864.45831 182.12498 872.375 186.375 c
880.29169 190.62502 889.08331 192.75 898.75 192.75 c
907.58337 192.75 914.70831 191.20834 920.125 188.125 c
925.54169 185.04166 929.70831 181.12503 932.625 176.375 c
935.54169 171.62497 937.5 166.2917 938.5 160.375 c
939.5 154.4583 940 148.6667 940 143 c
940 59 l
h
1029 56.5 m
1017.9999 56.5 1008.1251 58.291649 999.375 61.875 c
990.62494 65.458351 983.20837 70.333305 977.125 76.5 c
971.04163 82.666695 966.41669 89.791626 963.25 97.875 c
960.08331 105.95837 958.5 114.41663 958.5 123.25 c
958.5 132.75005 960.08331 141.7083 963.25 150.125 c
966.41669 158.5417 971 165.91664 977 172.25 c
983 178.58336 990.37494 183.58331 999.125 187.25 c
1007.8751 190.91669 1017.8333 192.75 1029 192.75 c
1040.1667 192.75 1050.0833 190.91669 1058.75 187.25 c
1067.4167 183.58331 1074.75 178.62503 1080.75 172.375 c
1086.75 166.12497 1091.2916 158.9167 1094.375 150.75 c
1097.4584 142.5833 1099 134.00005 1099 125 c
1099 122.66666 1098.9166 120.37501 1098.75 118.125 c
1098.5834 115.87499 1098.3334 113.91667 1098 112.25 c
1001 112.25 l
1001.6667 103.41663 1004.875 96.708359 1010.625 92.125 c
1016.375 87.541641 1022.9166 85.25 1030.25 85.25 c
1036.0834 85.25 1041.7083 86.666649 1047.125 89.5 c
1052.5417 92.333351 1056.1666 96.166641 1058 101 c
1092 91.5 l
1086.8333 81.166618 1078.8334 72.750031 1068 66.25 c
1057.1666 59.749966 1044.1667 56.5 1029 56.5 c
1029 56.5 l
h
1056.75 137 m
1055.9166 145.33337 1052.9167 151.91664 1047.75 156.75 c
1042.5833 161.58336 1036.1667 164 1028.5 164 c
1020.6666 164 1014.2084 161.54169 1009.125 156.625 c
1004.0416 151.70831 1001.0833 145.1667 1000.25 137 c
1056.75 137 l
h
1200.5 66 m
1195 63.666656 1188.75 61.500011 1181.75 59.5 c
1174.75 57.499989 1167.5834 56.5 1160.25 56.5 c
1155.25 56.5 1150.5417 57.124992 1146.125 58.375 c
1141.7083 59.625008 1137.8334 61.624985 1134.5 64.375 c
1131.1666 67.125015 1128.5416 70.749977 1126.625 75.25 c
1124.7084 79.750023 1123.75 85.166634 1123.75 91.5 c
1123.75 160 l
1107 160 l
1107 190.25 l
1123.75 190.25 l
1123.75 232 l
1163.75 232 l
1163.75 190.25 l
1190.5 190.25 l
1190.5 160 l
1163.75 160 l
1163.75 105.25 l
1163.75 100.91664 1164.875 97.791679 1167.125 95.875 c
1169.375 93.958321 1172.1666 93 1175.5 93 c
1178.3334 93 1181.3334 93.499992 1184.5 94.5 c
1187.6666 95.500008 1190.5 96.583328 1193 97.75 c
1200.5 66 l
h
1372 236.5 m
1372 59 l
1331 59 l
1331 131.75 l
1260.25 131.75 l
1260.25 59 l
1219.25 59 l
1219.25 236.5 l
1260.25 236.5 l
1260.25 167.75 l
1331 167.75 l
1331 236.5 l
1372 236.5 l
h
1523.25 69.75 m
1516.9166 65.916649 1510.2084 62.958344 1503.125 60.875 c
1496.0416 58.791656 1488.5 57.75 1480.5 57.75 c
1467.8333 57.75 1456.3334 60.291641 1446 65.375 c
1435.6666 70.458359 1426.7917 77.20829 1419.375 85.625 c
1411.9583 94.04171 1406.2084 103.66661 1402.125 114.5 c
1398.0416 125.33339 1396 136.49994 1396 148 c
1396 159.66672 1398.125 170.91661 1402.375 181.75 c
1406.625 192.58339 1412.5416 202.16663 1420.125 210.5 c
1427.7084 218.83337 1436.7083 225.45831 1447.125 230.375 c
1457.5417 235.29169 1468.9166 237.75 1481.25 237.75 c
1493.9167 237.75 1505.4166 235.12503 1515.75 229.875 c
1526.0834 224.62497 1534.9583 217.75005 1542.375 209.25 c
1549.7917 200.74995 1555.5 191.08339 1559.5 180.25 c
1563.5 169.41661 1565.5 158.41672 1565.5 147.25 c
1565.5 136.24994 1563.6666 125.79172 1560 115.875 c
1556.3334 105.95828 1551.25 96.91671 1544.75 88.75 c
1571.75 59 l
1533 59 l
1523.25 69.75 l
h
1481 94.25 m
1487.3334 94.25 1492.9166 95.499985 1497.75 98 c
1469.75 129 l
1508.25 129 l
1517.5 118.75 l
1521.6667 127.91671 1523.75 137.66661 1523.75 148 c
1523.75 154.83337 1522.7916 161.4583 1520.875 167.875 c
1518.9584 174.2917 1516.1666 179.95831 1512.5 184.875 c
1508.8334 189.79169 1504.3334 193.74998 1499 196.75 c
1493.6666 199.75002 1487.5834 201.25 1480.75 201.25 c
1473.5833 201.25 1467.3334 199.70834 1462 196.625 c
1456.6666 193.54166 1452.2084 189.45836 1448.625 184.375 c
1445.0416 179.29164 1442.3334 173.5417 1440.5 167.125 c
1438.6666 160.7083 1437.75 154.1667 1437.75 147.5 c
1437.75 140.66663 1438.7084 134.0417 1440.625 127.625 c
1442.5416 121.2083 1445.2916 115.54169 1448.875 110.625 c
1452.4584 105.70831 1456.9583 101.75002 1462.375 98.75 c
1467.7917 95.749985 1474 94.25 1481 94.25 c
1481 94.25 l
h
1481 94.25 m
W*
0 0 1580 296 rc
345.75 246.5 m
1576.75 246.5 l
1576.75 51.5 l
345.75 51.5 l
h
f
ep
end
%%Trailer
%%EOF
